---
title: "Tree Planting Dashboard"
format: dashboard
server: shiny
---

```{r}
#| context: setup
library(shiny)
library(tidyverse)
library(googlesheets4)
library(DT)
library(plotly)

# URL of the Google Sheet
sheet_url <- "https://docs.google.com/spreadsheets/d/1VHn2zFbGbpmB-inzJZUeNfrTwEJ--pBB5MjRmxPAVT0/edit?gid=15730184#gid=15730184"

# Read data from Google Sheet
df <- read_sheet(sheet_url, sheet = "Farmer Detail")
print(colnames(df))
stop()

# Create a dummy phone number
df$phone_number_dummy <- paste0("555-", sample(1000:9999, nrow(df), replace = TRUE))

# Remove original name and phone number
df <- df %>% select(-c("full_name", "phone_number"))

# Define tree types
tree_types <- c("gesho", "grevillea", "decurrens", "wanza", "papaya", "moringa", "coffee", "guava", "lemon")
```

```{r}
#| component: sidebar
selectInput("purpose_filter", "Filter by Purpose",
            choices = c("All", unique(df$purpose)),
            selected = "All")
```

```{r}
#| component: card
renderPlotly({
  filtered_df <- if (input$purpose_filter == "All") {
    df
  } else {
    df %>% filter(purpose == input$purpose_filter)
  }

  tree_counts <- filtered_df %>%
    select(all_of(tree_types)) %>%
    pivot_longer(cols = everything(), names_to = "tree_type", values_to = "count") %>%
    group_by(tree_type) %>%
    summarise(total_count = sum(count, na.rm = TRUE)) %>%
    filter(total_count > 0)

  plot_ly(tree_counts, labels = ~tree_type, values = ~total_count, type = 'pie', hole = 0.4) %>%
    layout(title = "Tree Species Distribution")
})
```

```{r}
#| component: card
renderDataTable({
  filtered_df <- if (input$purpose_filter == "All") {
    df
  } else {
    df %>% filter(purpose == input$purpose_filter)
  }
  datatable(filtered_df, options = list(pageLength = 10))
})
```
